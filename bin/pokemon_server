#!/usr/bin/env python

from pokemon_irc.irc import GMBot, PokeBot
import argparse
from pokemon_irc import settings
import socket
import os, os.path
import logging
logging.basicConfig(level=logging.DEBUG)

bot_list = {}


def create_socket():
    s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
    s.bind(settings.SOCKET_PATH)
    s.listen(2)
    s.settimeout(0.3)
    return s


def listen_socket(s):
    try:
        conn, addr = s.accept()
        data = conn.recv(1024)
        return str(data, encoding="utf-8") if data else False
    except socket.timeout:
        return False


#def create_pokemon(self, pokemon, bot_list=bot_list):
    #id = pokemon.id
    #player = pokemon.player
    #if id in bot_list: raise("jp2gmd")

    #p = PokeBot(
       #channel=settings.IRC_MAIN_CHANNEL,
       #nickname='%s[%s]' % (pokemon_name, player)
    #)
    #p._connect()
    #bot_list[id] = p


#def delete_pokemon(self, pokemon, bot_list=bot_list):
    #id = pokemon.id
    #if id not in bot_list: raise("jp2gmd")
    #pokemon = bot_list[id]
    #pokemon.disconnect(msg="faints")

    #pass


def main():
    gm = GMBot(bot_list=bot_list)
    #gm.create_pokemon = create_pokemon
    bot_list['GM'] = gm

    if os.path.exists(settings.SOCKET_PATH):
        os.remove(settings.SOCKET_PATH)

    for bot in bot_list.values():
        bot._connect()

    s = create_socket()

    while True:
        for bot in bot_list.values():
            bot.ircobj.process_once()


        data = listen_socket(s)
        if data:
            print(data)
            channel, data = data.split(' ', 1)
            gm.run(channel, data)


if __name__ == '__main__':
    main()

